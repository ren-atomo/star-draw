<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AR Star Constellation App</title>
    <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
    <script src="https://unpkg.com/aframe-look-at-component@0.8.0/dist/aframe-look-at-component.min.js"></script>
    <style>
        #info {
            position: fixed;
            top: 10px;
            width: 100%;
            text-align: center;
            z-index: 100;
            color: white;
            font-family: Arial, sans-serif;
            background-color: rgba(0,0,0,0.5);
            padding: 10px;
        }
    </style>
</head>
<body style="margin: 0; overflow: hidden;">
    <a-scene vr-mode-ui="enabled: false">
        <a-camera id="camera" position="0 1.6 0"></a-camera>
        <a-sky color="#000000"></a-sky>
    </a-scene>
    <div id="info">タップして星を選択し、線を引いてください</div>

    <script>
        // 簡略化した星座データ（実際にはもっと多くの星を含むべきです）
        const stars = [
            {name: "北極星", ra: 0, dec: 90, mag: 2},
            {name: "ベガ", ra: 279.23, dec: 38.78, mag: 0.03},
            {name: "デネブ", ra: 310.36, dec: 45.28, mag: 1.25},
            {name: "アルタイル", ra: 297.7, dec: 8.87, mag: 0.77},
            {name: "フォーマルハウト", ra: 344.41, dec: -29.62, mag: 1.16},
            {name: "カペラ", ra: 79.17, dec: 46.00, mag: 0.08},
            {name: "ベテルギウス", ra: 88.79, dec: 7.41, mag: 0.45},
            {name: "リゲル", ra: 78.63, dec: -8.20, mag: 0.18}
        ];

        let selectedStars = [];

        function initStars() {
            const scene = document.querySelector('a-scene');
            stars.forEach(star => {
                const starEl = document.createElement('a-sphere');
                starEl.setAttribute('radius', 0.05);
                starEl.setAttribute('color', 'white');
                starEl.setAttribute('star-data', star.name);
                starEl.setAttribute('look-at', '#camera');
                updateStarPosition(starEl, star);
                starEl.addEventListener('click', onStarClick);
                scene.appendChild(starEl);
            });
        }

        function updateStarPosition(starEl, starData) {
            const radius = 100; // 星球の半径
            const lat = starData.dec * (Math.PI / 180);
            const lon = starData.ra * (Math.PI / 180);
            const x = radius * Math.cos(lat) * Math.sin(lon);
            const y = radius * Math.sin(lat);
            const z = -radius * Math.cos(lat) * Math.cos(lon);
            starEl.setAttribute('position', `${x} ${y} ${z}`);
        }

        function onStarClick(event) {
            const star = event.target;
            star.setAttribute('color', 'yellow');
            selectedStars.push(star);
            if (selectedStars.length === 2) {
                drawLine(selectedStars[0], selectedStars[1]);
                selectedStars = [];
            }
        }

        function drawLine(star1, star2) {
            const scene = document.querySelector('a-scene');
            const line = document.createElement('a-entity');
            const start = star1.getAttribute('position');
            const end = star2.getAttribute('position');
            line.setAttribute('line', {
                start: start,
                end: end,
                color: 'white'
            });
            scene.appendChild(line);
        }

        function updateStarPositions() {
            const camera = document.getElementById('camera');
            const rotation = camera.getAttribute('rotation');
            const scene = document.querySelector('a-scene');
            scene.object3D.rotation.y = THREE.MathUtils.degToRad(rotation.y);
            scene.object3D.rotation.x = THREE.MathUtils.degToRad(rotation.x);
        }

        window.addEventListener('load', initStars);
        setInterval(updateStarPositions, 100); // 100ミリ秒ごとに星の位置を更新
    </script>
</body>
</html>
